[tool.poetry]
name = "redreactor"
version = "0.0.0"
description = "Red Reactor Battery Monitoring service with MQTT, and Home Assistant support"
documentation = "https://github.com/mreditor97/redreactor"
repository = "https://github.com/mreditor97/redreactor"
homepage = "https://github.com/mreditor97/redreactor"
authors = ["MrEditor97 <dev@mreditor97.co.uk>"]
license = "MIT"
readme = "README.md"
packages = [
  { include = "redreactor", from = "src"},
]

[tool.poetry.dependencies]
python = "^3.10"
pi-ina219 = "^1.4.1"
paho-mqtt = "^1.6.1"
pyyaml = "^6.0"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/mreditor97/redreactor/issues"
Changelog = "https://github.com/mreditor97/redreactor/releases"

[tool.poetry.dev-dependencies]
aresponses = "3.0.0"
black = "25.9.0"
blacken-docs = "1.20.0"
codespell = "2.4.1"
covdefaults = "2.3.0"
coverage = {version = "7.10.6", extras = ["toml"]}
mypy = "1.18.2"
pre-commit = "4.3.0"
pre-commit-hooks = "6.0.0"
pylint = "3.3.8"
pytest = "8.4.2"
pytest-asyncio = "1.2.0"
pytest-cov = "7.0.0"
ruff = "0.13.1"
safety = "3.6.1"
types-cachetools = "^5.3.0"
yamllint = "1.37.1"
types-pyyaml = "^6.0.12.10"

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["redreactor"]

[tool.coverage.report]
fail_under = 53
show_missing = true

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.10"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.MASTER]
ignore = [
  "tests",
]

[tool.pylint.BASIC]
good-names = [
  "_",
  "ex",
  "fp",
  "i",
  "id",
  "j",
  "k",
  "on",
  "Run",
  "T",
  "wv",
]

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "too-few-public-methods",
  "duplicate-code",
  "format",
  "unsubscriptable-object",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pylint.DESIGN]
max-attributes = 20

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff]
lint.ignore = [
  "ANN101", # Self... explanatory
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful
  "RUF012", # Disabled until it is Ruff finalises it
]
lint.select = ["ALL"]

[lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[lint.isort]
known-first-party = ["redreactor"]

[lint.mccabe]
max-complexity = 25

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
